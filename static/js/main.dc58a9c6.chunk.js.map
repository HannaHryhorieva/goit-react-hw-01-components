{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionItem.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","statItem","label","quantity","followers","views","likes","Statistics","title","s","statistics","statList","map","stat","StatEl","percentage","id","item","style","backgroundColor","randomColor","brightness","randomChannel","r","Math","random","toString","length","FriendListItem","isOnline","status","width","FriendList","friends","friendList","friend","TransactionItem","type","amount","currency","protoTypes","PropTypes","string","isRequired","bool","array","TransactionHistory","items","transactionHistory","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc58a9c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__wKgVp\",\"description\":\"Profile_description__3L00W\",\"avatar\":\"Profile_avatar__3LDu8\",\"name\":\"Profile_name__M3YZk\",\"tag\":\"Profile_tag__dYFrx\",\"location\":\"Profile_location__22L9l\",\"stats\":\"Profile_stats__334Ig\",\"label\":\"Profile_label__fU80G\",\"quantity\":\"Profile_quantity__XCH4J\",\"statItem\":\"Profile_statItem__3vBmU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__BviHw\",\"item\":\"FriendList_item__2O1fV\",\"status\":\"FriendList_status__bhe7Y\",\"avatar\":\"FriendList_avatar__1c5ih\",\"name\":\"FriendList_name__1ch4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__297KB\",\"title\":\"Statistics_title__3xNTH\",\"statList\":\"Statistics_statList__GD7A0\",\"item\":\"Statistics_item__1QaLi\",\"label\":\"Statistics_label__3Znc0\",\"percentage\":\"Statistics_percentage__3ZIOX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1zPU4\"};","import PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nexport default function Profile({ name, tag, location, avatar, stats }) {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={styles.avatar} />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li className={styles.statItem}>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{stats.followers}</span>\n        </li>\n        <li className={styles.statItem}>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{stats.views}</span>\n        </li>\n        <li className={styles.statItem}>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({ title = '', stats }) {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      <ul className={s.statList}>\n        {stats.map(stat => (\n          <StatEl\n            key={stat.id}\n            label={stat.label}\n            percentage={stat.percentage}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\nfunction StatEl({ label, percentage }) {\n  return (\n    <li className={s.item} style={{ backgroundColor: randomColor(10) }}>\n      <span className={s.label}>{label}</span>\n      <span className={s.percentage}>{percentage}%</span>\n    </li>\n  );\n}\nStatEl.propTypes = {\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n\nfunction randomColor(brightness) {\n  function randomChannel(brightness) {\n    var r = 255 - brightness;\n    var n = 0 | (Math.random() * r + brightness);\n    var s = n.toString(16);\n    return s.length === 1 ? '0' + s : s;\n  }\n  return (\n    '#' +\n    randomChannel(brightness) +\n    randomChannel(brightness) +\n    randomChannel(brightness)\n  );\n}\n","import PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\n\nexport default function FriendListItem({ avatar, name, isOnline }) {\n  return (\n    <li className={s.item}>\n      {isOnline ? (\n        <span className={s.status} style={{ backgroundColor: 'green' }}></span>\n      ) : (\n        <span className={s.status} style={{ backgroundColor: 'red' }}></span>\n      )}\n\n      <img className={s.avatar} src={avatar} alt=\"\" width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n}\n\nFriendListItem.protoTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport s from './FriendList.module.css';\n\nexport default function FriendList({ friends }) {\n  return (\n    <ul className={s.friendList}>\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n}\n\nFriendList.protoTypes = {\n  friends: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\n\nexport default function TransactionItem({ type, amount, currency }) {\n  return (\n    <tr>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </tr>\n  );\n}\nTransactionItem.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport TransactionItem from './TransactionItem';\nimport s from './TransactionHistory.module.css';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <table className={s.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => (\n          <TransactionItem\n            key={item.id}\n            type={item.type}\n            amount={item.amount}\n            currency={item.currency}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\nTransactionHistory.propTypes = {\n  items: PropTypes.array,\n};\n","import './App.css';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport user from './user.json';\nimport statisticalData from './statistical-data.json';\nimport friends from './friends.json';\nimport transactions from './transactions.json';\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}